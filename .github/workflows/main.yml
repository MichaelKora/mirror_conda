name: Dowload and Mirror packages from anaconda 
on:
  push:
    branches:
      - master

defaults:
  run:
    working-directory: ./

jobs:
  build-${{ matrix.subdir }}-pkgs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - subdir: [linux-64,osx-64,osx-arm64,win-64,linux-aarch64,linux-ppc64le,noarch]
    env:
      GITHUB_USER: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
    steps:
      - uses: actions/checkout@v2
        with:
            ref: master
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: my_env.yml
          micromamba-version: latest

      - name:  clone project and mirror
        run: |
          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
          conda-oci mirror --channel conda-forge -s ${{ matrix.subdir }} --packages xtensor --user ${{ env.GITHUB_USER }}
        shell: bash -l {0}
      - run: echo "üçè The current status is ${{ job.status }}."


#  build-osx64-pkgs:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#
#      - name:  clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s osx-64 --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#
#  build-osxarm64-pkgs:    
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#
#      - name:  clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s osx-arm64 --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#
#  build-win64-pkgs:    
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#
#      - name:  clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s win-64 --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#
#  build-linuxaarch64-pkgs:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#
#      - name:  clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s linux-aarch64 --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#
#  build-linuxppc64le-pkgs:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#      - name: clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s linux-ppc64le --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#
#  build-noarch-pkgs:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_USER: ${{ github.actor }}
#      GITHUB_TOKEN: ${{ secrets.TOKEN2 }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#            ref: master
#
#      - name: install mamba
#        uses: mamba-org/provision-with-micromamba@main
#        with:
#          environment-file: my_env.yml
#          micromamba-version: latest
#
#      - name:  clone project and mirror
#        run: |
#          python -m pip install git+https://github.com/mamba-org/conda_oci_mirror@main
#          echo ${{ env.GITHUB_TOKEN }} | oras login https://ghcr.io -u ${{ env.GITHUB_USER }} --password-stdin
#          conda-oci mirror --channel conda-forge -s noarch --packages xtensor --user ${{ env.GITHUB_USER }}
#        shell: bash -l {0}
#      - run: echo "üçè The current status is ${{ job.status }}."
#
#  
